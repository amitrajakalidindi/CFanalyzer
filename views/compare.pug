// problems ratings chart tags should be in ascending order
// buttons in ratings charts are not working properly
// colors of second user in langchart should be update
doctype html
html 
    head
        meta(charset='utf-8')
        meta(name='viewport' content='width=device-width, initial-scale=1, shrink-to-fit=no')
        meta(http-equiv='x-ua-compatible' content='ie=edge')

        link(rel='stylesheet' href='https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css')
        script(src='https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js')
        script(src='https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js')
        script(src='https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js')
        script(src='https://kit.fontawesome.com/a076d05399.js')
        script(type='text/javascript' src='https://www.gstatic.com/charts/loader.js')
        title='CFanalyzer'
    body(style="font-family: -apple-system,BlinkMacSystemFont,'Segoe UI',Roboto,'Helvetica Neue',Arial,sans-serif,'Apple Color Emoji','Segoe UI Emoji','Segoe UI Symbol'")
        nav(class='navbar navbar-expand-lg fixed-top justify-content-between navbar-light' style='background-color:Turquoise')
            a(class='navbar-brand' href='/')='CFanalyzer'
            button(class='navbar-toggler' type='button' data-toggle='collapse' data-target='#collapsibleNavbar')
                    span(class='navbar-toggler-icon')
            div(class='collapse navbar-collapse' id='collapsibleNavbar')
                ul(class='navbar-nav mr-auto')
                    li(class='nav-item')
                        a(class='nav-link' href='/suggestions')='Problems'
                    li(class='nav-item')
                        a(class='nav-link active' href='/compare')='Compare'
                    li(class='nav-item')
                        a(class='nav-link' href='/groups')='Groups'
                ul(class='navbar-nav')
                    if(username)
                        li(class='nav-item dropdown')
                            a(class='nav-link dropdown-toggle' href=`/user/${username}` id='navbardrop' data-toggle='dropdown')=username
                            div(class='dropdown-menu dropdown-menu-right')
                                a(class='dropdown-item' href='/signout')='Sign out'
                    else
                        li(class='nav-item')
                            a(class='nav-link' href='/signin')='Sign in'
        div(class='container shadow col-sm-7 p-3 mb-5 bg-white rounded' style='margin-top:100px')
            form(action='/compare' method='post')
                div(class='form-group row col-12')
                    if(handle)
                        input(type='text' class='col-md-4 offset-md-2 form-control form-control-lg' id='handle1' value=`${handle}` placeholder='Enter first handle' name='handle1' required)
                    else 
                        input(type='text' class='col-md-4 offset-md-2 form-control form-control-lg' id='handle1' placeholder='Enter first handle' name='handle1' required)
                    if(Handle)
                        input(type='text' class='col-md-4 form-control form-control-lg' id='handle2' value=`${Handle}` placeholder='Enter second handle' name='handle2' required)
                    else 
                        input(type='text' class='col-md-4 form-control form-control-lg' id='handle2' placeholder='Enter second handle' name='handle2' required)
                div(class='d-flex justify-content-center pt-sm-3')
                    button(type='submit' class='btn btn-dark')='Compare'

        if(search)
            div(class='container d-flex justify-content-center')
                table(class='table shadow p-3 mb-5 bg-white rounded' style='width:75%')
                    thead(class='thead-dark')
                        tr 
                            th(scope='col')=''
                            th(scope='col')= `${handle}`
                            th(scope='col')= `${Handle}`
                    tbody
                        tr 
                            th(scope='row')='No of contests'
                            td= `${noofcontests}`
                            td= `${Noofcontests}`
                        tr 
                            th(scope='row')='Number of Problems Solved'
                            td= `${noOfProblemsSolved}`
                            td= `${NoOfProblemsSolved}`
                        tr 
                            th(scope='row')='Accuracy'
                            td= `${accuracy}`
                            td= `${Accuracy}`
                        tr 
                            th(scope='row')='Average Attempts to Solve a Problem'
                            td= `${avgAttempts}`
                            td= `${AvgAttempts}`
                        tr 
                            th(scope='row')='Rank'
                            td= `${rank}`
                            td= `${Rank}`
                        tr
                            th(scope='row')='Max Rank'
                            td= `${maxrank}`
                            td= `${Maxrank}`
                        tr 
                            th(scope='row')='Rating'
                            td= `${rating}`
                            td= `${Rating}`
                        tr
                            th(scope='row')='Max Rating'
                            td= `${maxrating}`
                            td= `${Maxrating}`
                        tr
                            th(scope='row')='Min Rating'
                            td= `${minrating}`
                            td= `${Minrating}`
                        tr
                            th(scope='row')='Average Rating'
                            td= `${avgrating}`
                            td= `${Avgrating}`
                        tr 
                            th(scope='row')='Best Rank'
                            td= `${bestRank}`
                            td= `${BestRank}`
                        tr 
                            th(scope='row')='Worst Rank'
                            td= `${worstRank}`
                            td= `${WorstRank}`
        

            div(class='container d-flex justify-content-center shadow p-3 mb-5 bg-white rounded' id="practiceRatingsChart" style="width: 900px; height: 500px")
            div(class='container d-flex justify-content-center shadow p-3 mb-5 bg-white rounded' id="contestRatingsChart" style="width: 900px; height: 500px")
            div(class='container d-flex justify-content-center shadow p-3 mb-5 bg-white rounded' id="contestChart" style="width: 900px; height: 500px")
           
        script.
            google.charts.load('current', {'packages':['bar']});
            google.charts.setOnLoadCallback(drawChart);

            function drawChart() {
                var practiceRatings = Array(#{practiceRatings});
                var p_ratingscount = Array(#{p_ratingscount});
                var P_ratingscount = Array(#{P_ratingscount});
                var handle = !{JSON.stringify(handle)};
                var Handle = !{JSON.stringify(Handle)};
                var ratingsList = [["Problem rating", handle, Handle]]
                for(var i = 0; i < practiceRatings.length; i++){
                    var element = [practiceRatings[i], p_ratingscount[i], P_ratingscount[i]];
                    ratingsList.push(element);
                }

                var data = google.visualization.arrayToDataTable(ratingsList);

                var options = {
                    chart: {
                        title: 'Ratings of Problems Solved in Practice',
                    }
                };

                var chart = new google.charts.Bar(document.getElementById('practiceRatingsChart'));
                chart.draw(data, google.charts.Bar.convertOptions(options));
            }
        
        script.
            google.charts.load('current', {'packages':['bar']});
            google.charts.setOnLoadCallback(drawChart);

            function drawChart() {
                var contestRatings = Array(#{contestRatings});
                var c_ratingscount = Array(#{c_ratingscount})
                var C_ratingscount = Array(#{C_ratingscount})
                var handle = !{JSON.stringify(handle)};
                var Handle = !{JSON.stringify(Handle)};
                var ratingsList = [["Problem rating", handle, Handle]]

                for(var i = 0; i < contestRatings.length; i++){
                    var element = [contestRatings[i], c_ratingscount[i], C_ratingscount[i]];
                    ratingsList.push(element);
                }
                var data = google.visualization.arrayToDataTable(ratingsList);

                var options = {
                    chart: {
                        title: 'Ratings of Problems Solved in Contest',
                    }
                };

                var chart = new google.charts.Bar(document.getElementById('contestRatingsChart'));
                chart.draw(data, google.charts.Bar.convertOptions(options));
            }

        script.
            google.charts.load('current', {'packages':['bar']});
            google.charts.setOnLoadCallback(drawChart);

            function drawChart() {
                var solvedCount = ['0', '1', '2', '3', '4', '5','6','7','8'];
                var problemscount = Array(#{problemscount});
                var Problemscount = Array(#{Problemscount});
                var handle = !{JSON.stringify(handle)};
                var Handle = !{JSON.stringify(Handle)};
                var countList = [["Number of problems Solved", handle, Handle]]
                for(var i = 0; i < solvedCount.length; i++){
                    var element = [solvedCount[i], problemscount[i], Problemscount[i]];
                    countList.push(element);
                }
                var data = google.visualization.arrayToDataTable(countList);

                var options = {
                    chart: {
                        title: 'Number of Problems Solved in Contest',
                    }
                };

                var chart = new google.charts.Bar(document.getElementById('contestChart'));
                chart.draw(data, google.charts.Bar.convertOptions(options));
            }
    
  
                      